//By Colin O'Rourke and Gabriel Ryan

#include <kipr/botball.h>
int l_motor = 0;
int r_motor = 3;
int speed = 100;
int r_speed = -100;
int r_evade = -75;
int l_evade = 25;
int counter = 0;
int shortPause = 1500;
int longPause = 2500;
int sensUno = 1;
int sensDos = 2;
//FUNCTION DEFINITIONS
void forward(){
motor(l_motor,speed);
    motor(r_motor,speed);
}

void backward(){
    motor(l_motor,r_speed);
    motor(r_motor,r_speed);
    msleep(shortPause);
    ao();
   
}
void turnR(){
    motor(l_motor,r_speed);
    motor(r_motor,speed);
    msleep(shortPause);
    ao();
}

void turnL(){
  motor(l_motor,speed);
    motor(r_motor,r_speed);
    msleep(shortPause);
    ao();
}
void evadeR(){
    motor(l_motor,l_evade);
    motor(r_motor,r_evade);
    msleep(longPause);
    ao();
}
int main()
{
    shut_down_in(300);
    while(1){//as long as the log test is true...
       forward();
        if (digital(sensDos)==1){
               backward();
               turnR();
               forward();
               counter++;
            }
        if (digital(sensUno) == 1){
            backward();
            turnL();
            forward();
            counter++;
            }
        //stuff will loop
        if(counter == 4){
            evadeR();
            counter = 0;
        }
   }
   
    printf("Hello World\n");
    return 0;
}




/*


int arm = 0;
int arm_pos = 500;
int pause = 500;
int main()
{
    printf("Hello World and comrade gabe.\n");
    motor(l_motor, speed); //run motor in port 0 at half speed
    motor(r_motor, speed);
    msleep(pause); //do the preceding actionat 1.5 seconds
    ao(); //all off
    printf("Gabe is not a communist./n");
    enable_servos(); //enable servos
    set_servo_position(arm,arm_pos); //mover servo to halfway point
    msleep(pause); //pauses to let the servo move
   set_servo_position(arm,arm_pos+1000); //mover servo to halfway point
    msleep(pause); //pauses to let the servo move
    set_servo_position(arm,arm_pos); //mover servo to halfway point
    msleep(pause); //pauses to let the servo move
    disable_servos();
    return
    */
