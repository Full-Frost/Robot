//Front:2910 Right:2700 toofar:2910

#include <kipr/botball.h>
int l_motor = 0; //motor port
int r_motor = 3; //motor port
int speed = 50; //speed value
int r_speed = -40; //speed value 
int veerWallL = 20; //veer value
int veerWallR = 25; //veer value 
int counter = 0; //counter value 
int shortPause = 1425; //pause value 
int longPause = 2500; //pause value 
int etFront = 0; //sensor port
int etRight = 3; //sensor port
int frontStop = 2910; //range number
int rightStopclose = 2300; //range number
int rightStoplong = 2908; //range number 
int turnLr = -20; //turn speed
int turnLl = 50; //turn speed
int veerFast = 70; //fast veer value 
int miniTurnL = -20; //turn speed
int miniTurnR = 30; //turn speed

void forward(){  //forward function 
motor(l_motor,speed);
    motor(r_motor,speed);
    ao();
}

void turnL(){  turn left function 
  motor(l_motor,turnLl);
    motor(r_motor,turnLr);
    msleep(shortPause);
    ao();
}

void veerWall(){ //veer towards wall function
    motor (l_motor, veerWallL);
    motor (r_motor, veerFast);
    ao();
}

void veerAway(){ //veer away from wall function
    motor(l_motor, veerFast);
    motor(r_motor, veerWallL);
    ao();
}


void followWall(){ //while loop to follow wall
    while (analog(etFront)< frontStop){
        forward();
        if(analog(etRight)>= rightStoplong){
            veerWall();
          }  
        if (analog(etRight)<= rightStopclose){
            veerAway();
        }
   }
ao();
}

void turnSolution(){ //sencond turn 
    motor (l_motor, miniTurnL);
    motor(r_motor, miniTurnR);
    forward();
}

void forward2(){//move forward for a set amount of time 
    motor(l_motor,speed);
    motor(r_motor,speed);
    msleep(400);
    ao();
}

int main() //run functions 
{
   followWall();
    forward2();
    turnL();
    turnSolution();
    followWall();
    ao();
    printf("Hello World\n");
    return 0;
}
